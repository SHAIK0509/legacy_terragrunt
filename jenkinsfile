pipeline {
    agent any
    environment {
        JENKINS_ENVIRONMENT = "true"
    }

    parameters {
        choice(
            name: 'ENVIRONMENT',
            choices: ['dev', 'stage', 'prod'],
            description: 'Choose environment to deploy'
        )
        choice(
            name: 'ACTION',
            choices: ['plan', 'apply', 'destroy'],
            description: 'Choose action: apply (plan+apply) or destroy (plan+destroy)'
        )
        string(
            name: 'COMMIT_HASH',
            defaultValue: '',
            description: 'Enter the first 7 digits of the commit hash to checkout and run the pipeline'
        )
    }

    stages {

        stage('Checkout') {
            steps {
                script {
                    if (params.COMMIT_HASH) {
                        echo "Checking out commit hash: ${params.COMMIT_HASH}"
                        sh "git fetch --all"
                        sh "git checkout ${params.COMMIT_HASH}"
                    } else {
                        echo "No commit hash provided, skipping checkout."
                    }
                }
            }
        }

        stage('Plan') {
            when { expression { return params.ACTION == 'plan' } }
            steps {
                script {
                    def liveDir = "Terragrunt/ec2-terragrunt/live"
                    echo "Planning Terraform/Terragrunt in ${liveDir} for ${params.ENVIRONMENT}"
                    sh "cd ${liveDir} && make plan ENV=${params.ENVIRONMENT}"
                }
            }
        }

        stage('Apply') {
            when { expression { return params.ACTION == 'apply' } }
            steps {
                script {
                    def liveDir = "Terragrunt/ec2-terragrunt/live"
                    echo "Applying Terraform/Terragrunt in ${liveDir} for ${params.ENVIRONMENT}"
                    sh "cd ${liveDir} && make plan ENV=${params.ENVIRONMENT}"
                    sh "cd ${liveDir} && make apply ENV=${params.ENVIRONMENT}"
                }
            }
        }

        stage('Destroy') {
            when { expression { return params.ACTION == 'destroy' } }
            steps {
                script {
                    def liveDir = "Terragrunt/ec2-terragrunt/live"
                    echo "Destroying Terraform/Terragrunt in ${liveDir} for ${params.ENVIRONMENT}"
                    sh "cd ${liveDir} && make plan ENV=${params.ENVIRONMENT}"
                    sh "cd ${liveDir} && make destroy ENV=${params.ENVIRONMENT}"
                }
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline completed successfully for environment: ${params.ENVIRONMENT}"
        }
        failure {
            echo "❌ Pipeline failed for environment: ${params.ENVIRONMENT}"
        }
    }
}
