pipeline {
    agent any

    environment {
        ENV     = "${params.ENV ?: 'dev'}"
        LIVE_DIR = "legacy_terragrunt/terragrunt/ec2-terragrunt/live"
    }

    parameters {
        choice(name: 'ENV', choices: ['dev', 'stage', 'prod'], description: 'Select environment to deploy')
    }

    stages {

        stage('Workspace Info') {
            steps {
                sh '''
                    echo "===== Current Directory ====="
                    pwd
                    echo "===== Top-level repo contents ====="
                    ls -l
                    echo "===== Recursive structure ====="
                    ls -lR | head -50
                '''
            }
        }

        stage('Init') {
            steps {
                script {
                    dir("${LIVE_DIR}/${ENV}") {
                        sh "terragrunt init"
                    }
                }
            }
        }

        stage('Plan') {
            steps {
                script {
                    dir("${LIVE_DIR}/${ENV}") {
                        sh "terragrunt plan -out=tfplan"
                    }
                }
            }
        }

        stage('Approve Apply') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    input message: "Apply changes to ${ENV}?", ok: "Yes, Apply"
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    dir("${LIVE_DIR}/${ENV}") {
                        sh "terragrunt apply -auto-approve tfplan"
                    }
                }
            }
        }

        stage('Destroy Approval') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    input message: "Destroy environment ${ENV}?", ok: "Yes, Destroy"
                }
            }
        }

        stage('Destroy') {
            steps {
                script {
                    dir("${LIVE_DIR}/${ENV}") {
                        sh "terragrunt destroy -auto-approve"
                    }
                }
            }
        }

        stage('Output') {
            steps {
                script {
                    dir("${LIVE_DIR}/${ENV}") {
                        sh "terragrunt output"
                    }
                }
            }
        }
    }

    post {
        failure {
            echo "❌ Pipeline failed for environment: ${ENV}"
        }
        success {
            echo "✅ Pipeline succeeded for environment: ${ENV}"
        }
    }
}
